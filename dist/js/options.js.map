{"mappings":"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","sources":["src/js/options-page/options.js","src/js/ui-page/utils.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/loglevel/lib/loglevel.js"],"sourcesContent":["import { saveApiKey, getApiKey, checkAndAddDefaultPromptConfigurations, deletePromptConfiguration, getPromptConfigurations, savePromptConfiguration, logError, logInfo } from \"../ui-page/utils\";\r\n\r\n\r\n\r\n// Load stored settings on page load\r\ndocument.addEventListener('DOMContentLoaded', async() => {\r\n  // Selectors for key elements\r\nconst geminiApiKeyInput = document.getElementById('gemini-api-key');\r\nconst textSummaryKeyInput = document.getElementById('text-summary-key');\r\nconst togglePromptSectionBtn = document.getElementById('toggle-prompt-section');\r\nconst promptConfigContent = document.getElementById('prompt-config-content');\r\nconst addWidgetBtn = document.getElementById('add-widget-btn');\r\nconst widgetContainer = document.getElementById('widget-container');\r\nconst updateBtn = document.getElementById('update-btn');\r\nconst setDefaultBtn = document.getElementById('set-config-default-btn');\r\nconst saveConfigBtn = document.getElementById('save-config-btn');\r\n\r\ngeminiApiKeyInput.value = await getApiKey(\"gemini-api-key\");\r\ntextSummaryKeyInput.value = await getApiKey(\"text-summary-key\");\r\n\r\n// Toggle prompt configuration visibility\r\ntogglePromptSectionBtn.addEventListener('click', async () => {\r\n  promptConfigContent.classList.toggle('hidden');\r\n  if (!promptConfigContent.classList.contains('hidden')) {\r\n      await refreshWidgets();\r\n  }\r\n});\r\n\r\n// Add a new widget\r\naddWidgetBtn.addEventListener('click', () => {\r\n  const widgetData = { name: '', prompt_template: '' };\r\n  addWidgetToUI(widgetData, true);\r\n});\r\n\r\n// Button Actions\r\nupdateBtn.addEventListener('click', () => {\r\n  const geminiAuthKey = document.getElementById('gemini-api-key').value;\r\n  const textSummaryKey = document.getElementById('text-summary-key').value;\r\n\r\n  if (geminiAuthKey && textSummaryKey) {\r\n    saveApiKey({ \"gemini-api-key\":geminiAuthKey, \"text-summary-key\":textSummaryKey });\r\n  } else {\r\n      createWarningMessageDiv('Please enter both Gemini Auth Key and Text Summary Key.');\r\n  }\r\n});\r\n\r\nsetDefaultBtn.addEventListener('click', async () => {\r\n await checkAndAddDefaultPromptConfigurations();\r\n await refreshWidgets();\r\n});\r\n\r\nsaveConfigBtn.addEventListener('click', async () => {\r\n  const widgets = getAllWidgetValues();\r\n  for (const widget of widgets) {\r\n    await savePromptConfiguration(widget);\r\n  }\r\n});\r\n\r\nasync function refreshWidgets() {\r\n  const widgetContainer = document.getElementById('widget-container');\r\n  if (!widgetContainer) {\r\n      logError('Element with ID \"widget-container\" not found.');\r\n      return;\r\n  }\r\n  // Clear all child elements inside the widget-container\r\n  widgetContainer.innerHTML = '';\r\n  const prompt_configs = await getPromptConfigurations();\r\n  logInfo(\"Displaying prompt_config\",prompt_configs);\r\n      prompt_configs.forEach(config => {\r\n        addWidgetToUI(config);\r\n    });\r\n}\r\n\r\nfunction getAllWidgetValues() {\r\n  const widgetContainer = document.getElementById('widget-container');\r\n  if (!widgetContainer) {\r\n      logError('Element with ID \"widget-container\" not found.');\r\n      return [];\r\n  }\r\n  logInfo(\"widgetContainer\", widgetContainer);\r\n  const widgets = Array.from(widgetContainer.children).map((widgetDiv) => {\r\n      debugger;\r\n      logInfo(\"widgetDiv\", widgetDiv);\r\n      const name = widgetDiv.querySelector('input[name=\"name\"]').value;\r\n      const id = name.replace(/\\s+/g, '-').toLowerCase();\r\n      const prompt_template = widgetDiv.querySelector('textarea[name=\"prompt_template\"]').value;\r\n      return { name, id, prompt_template, canDelete: true };\r\n  });\r\n\r\n  return widgets;\r\n}\r\n\r\n// Function to add a widget UI block\r\nfunction addWidgetToUI(widgetData, isNew = false) {\r\n  const widgetDiv = document.createElement('div');\r\n  widgetDiv.className = 'p-4 border border-gray-300 rounded-lg bg-gray-100';\r\n\r\n  // Name field\r\n  const nameLabel = document.createElement('label');\r\n  nameLabel.textContent = 'Name of the Widget';\r\n  nameLabel.className = 'block text-gray-600 mb-2';\r\n  const nameInput = document.createElement('input');\r\n  nameInput.type = 'text';\r\n  nameInput.name = 'name';\r\n  nameInput.value = widgetData.name;\r\n  nameInput.className =\r\n    'w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500';\r\n  nameInput.addEventListener('input', () => {\r\n    const idValue = nameInput.value.replace(/\\s+/g, '-').toLowerCase();\r\n    idInput.value = idValue;\r\n});\r\n\r\n  // Hidden ID field\r\n  const idInput = document.createElement('input');\r\n  idInput.type = 'hidden';\r\n  idInput.name = 'id';\r\n  idInput.value = widgetData.id;\r\n\r\n  // Prompt field\r\n  const promptLabel = document.createElement('label');\r\n  promptLabel.textContent = 'Prompt';\r\n  promptLabel.className = 'block text-gray-600 mt-4';\r\n  const promptDescription = document.createElement('p');\r\n  promptDescription.textContent =\r\n    'You can include {userinput}, {sitedata}, {systemdata}, {chatdata} annotations to your prompt template';\r\n  promptDescription.className = 'text-gray-500 text-sm';\r\n  const promptTextarea = document.createElement('textarea');\r\n  promptTextarea.value = widgetData.prompt_template;\r\n  promptTextarea.name = 'prompt_template';\r\n  promptTextarea.className =\r\n    'w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500';\r\n  promptTextarea.style.height = '200px';\r\n  //promptTextarea.addEventListener('input', () => saveWidgets());\r\n\r\n  // Close button\r\n  const closeButton = document.createElement('button');\r\n  closeButton.className = 'mt-4 text-gray-500 hover:text-gray-700 text-sm';\r\n  closeButton.textContent = '✖';\r\n  closeButton.addEventListener('click', () => {\r\n      widgetDiv.remove();\r\n      deletePromptConfiguration(idInput.value);\r\n  });\r\n  // Append all elements to the widget div\r\n  widgetDiv.appendChild(nameLabel);\r\n  widgetDiv.appendChild(nameInput);\r\n  widgetDiv.appendChild(promptLabel);\r\n  widgetDiv.appendChild(promptDescription);\r\n  widgetDiv.appendChild(promptTextarea);\r\n   // Append close button only if id is not \"write-email\" or \"generate-replies\"\r\n   if (idInput.value !== 'write-email' && idInput.value !== 'generate-replies') {\r\n    widgetDiv.appendChild(closeButton);\r\n}\r\n\r\n  \r\n\r\n  // Add widget to container\r\n  widgetContainer.appendChild(widgetDiv);\r\n\r\n  // Save widgets if it’s a new one\r\n  // if (isNew) saveWidgets();\r\n}\r\n\r\nfunction getPromptConfig() {\r\n  const widgetContainer = document.getElementById('widget-container'); // Assuming there's a container with this ID\r\n  if (!widgetContainer) {\r\n    logError('Element with ID \"widget-container\" not found.');\r\n    return [];\r\n}\r\n  const widgets = Array.from(widgetContainer.children).map((widgetDiv) => {\r\n      const name = widgetDiv.querySelector('input[name=\"name\"]').value;\r\n      const id = widgetDiv.querySelector('input[name=\"id\"]').value;\r\n      const prompt_template = widgetDiv.querySelector('textarea[name=\"prompt_template\"]').value;\r\n      return { name, id, prompt_template, canDelete: true };\r\n  });\r\n  return widgets;\r\n}\r\n\r\n// Save widgets to storage\r\nfunction saveWidgets() {\r\n  const widgets = Array.from(widgetContainer.children).map((widgetDiv) => {\r\n    const name = widgetDiv.querySelector('input').value;\r\n    const prompt = widgetDiv.querySelector('textarea').value;\r\n    return { name, prompt };\r\n  });\r\n  chrome.storage.sync.set({ widgets });\r\n}\r\n\r\n})","import log from 'loglevel';\r\n\r\nlog.setLevel('info'); // Set the default logging level\r\n\r\nexport function setLogLevel(level) {\r\n    log.setLevel(level);\r\n}\r\n\r\nexport function logInfo(message, ...optionalParams) {\r\n    log.info(message, ...optionalParams);\r\n}\r\n\r\nexport function logError(message, ...optionalParams) {\r\n    log.error(message, ...optionalParams);\r\n}\r\n\r\n// Utility: Fetch data from Chrome storage\r\nexport function fetchFromStorage(key) {\r\n    return new Promise((resolve, reject) => {\r\n      chrome.storage.local.get(key, (result) => {\r\n        if (chrome.runtime.lastError) {\r\n          reject(chrome.runtime.lastError);\r\n        } else {\r\n          resolve(result[key] || []);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Utility: Add data to Chrome storage\r\n  export function saveToStorage(key, value) {\r\n    return new Promise((resolve, reject) => {\r\n      chrome.storage.local.set({ [key]: value }, () => {\r\n        if (chrome.runtime.lastError) {\r\n          reject(chrome.runtime.lastError);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Utility: Filter messages by siteName\r\n  export function filterMessages(messages, siteName, exclude = false) {\r\n    return messages.filter((message) =>\r\n      exclude ? message.siteName !== siteName : message.siteName === siteName\r\n    );\r\n  }\r\n  \r\n  // Utility: Concatenate message content\r\n  export function concatenateMessages(messages) {\r\n    return messages.map((message) => message.content || \"\").join(\" \").trim();\r\n  }\r\n\r\n  export function addMessageToMemory(userMessageText, site, siteURL) {\r\n    let newMessage = {\r\n      content: userMessageText,\r\n      siteName: site,\r\n      siteUrl: siteURL\r\n    }\r\n    chrome.storage.local.get(\"userMessages\", (result) => {\r\n      // Retrieve existing userMessages or initialize an empty array if it doesn't exist\r\n      const userMessages = result.userMessages || [];\r\n  \r\n      // Append the new message to the array\r\n      userMessages.push(newMessage);\r\n  \r\n      // Save the updated array back to Chrome storage\r\n      chrome.storage.local.set({ userMessages }, () => {\r\n        logInfo(\"New message appended:\", newMessage);\r\n        logInfo(\"Updated userMessages:\", userMessages);\r\n      });\r\n    });\r\n\r\n \r\n\r\n  }\r\n  export function getApiKeys() {\r\n    return new Promise((resolve, reject) => {\r\n      chrome.storage.sync.get(\"apikeys\", (data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  export function saveApiKey(key) {\r\n    return new Promise((resolve, reject) => {\r\n        chrome.storage.sync.get(\"apikeys\", (data) => {\r\n            const apiKeys = data.apikeys || {};\r\n            Object.assign(apiKeys, key);\r\n\r\n            chrome.storage.sync.set({ apikeys: apiKeys }, () => {\r\n                logInfo(\"API key saved:\", key);\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nexport function getApiKey(key) {\r\n  return new Promise((resolve, reject) => {\r\n      chrome.storage.sync.get(\"apikeys\", (data) => {\r\n          const apiKeys = data.apikeys || {};\r\n          if (apiKeys.hasOwnProperty(key)) {\r\n              resolve(apiKeys[key]);\r\n          } else {\r\n            resolve(null); \r\n          }\r\n      });\r\n  });\r\n}\r\n\r\nexport function savePromptConfiguration(config) {\r\n  return new Promise((resolve, reject) => {\r\n      chrome.storage.sync.get(\"promptconfig\", (data) => {\r\n          const promptConfigs = data.promptconfig || [];\r\n          const existingIndex = promptConfigs.findIndex(item => item.id === config.id);\r\n\r\n          if (existingIndex !== -1) {\r\n              // Update existing configuration\r\n              promptConfigs[existingIndex] = config;\r\n          } else {\r\n              // Add new configuration\r\n              promptConfigs.push(config);\r\n          }\r\n\r\n          chrome.storage.sync.set({ promptconfig: promptConfigs }, () => {\r\n              logInfo(\"Prompt configuration saved:\", config);\r\n              resolve();\r\n          });\r\n      });\r\n  });\r\n}\r\n\r\nexport function getPromptConfigurations() {\r\n  return new Promise((resolve, reject) => {\r\n      chrome.storage.sync.get(\"promptconfig\", (data) => {\r\n          const promptConfigs = data.promptconfig || [];\r\n          logInfo(\"Prompt configurations retrieved:\", promptConfigs);\r\n          resolve(promptConfigs);\r\n      });\r\n  });\r\n}\r\n\r\nexport function getPromptConfiguration(id) {\r\n  return new Promise((resolve, reject) => {\r\n      chrome.storage.sync.get(\"promptconfig\", (data) => {\r\n          const promptConfigs = data.promptconfig || [];\r\n          const config = promptConfigs.find(item => item.id === id);\r\n\r\n          if (config) {\r\n              resolve(config);\r\n          } else {\r\n              reject(`Prompt configuration with id ${id} not found`);\r\n          }\r\n      });\r\n  });\r\n}\r\n\r\nexport function deletePromptConfiguration(id) {\r\n  return new Promise((resolve, reject) => {\r\n      chrome.storage.sync.get(\"promptconfig\", (data) => {\r\n          let promptConfigs = data.promptconfig || [];\r\n          const newPromptConfigs = promptConfigs.filter(item => item.id !== id);\r\n\r\n          if (newPromptConfigs.length === promptConfigs.length) {\r\n              reject(`Prompt configuration with id ${id} not found`);\r\n              return;\r\n          }\r\n\r\n          chrome.storage.sync.set({ promptconfig: newPromptConfigs }, () => {\r\n              logInfo(`Prompt configuration with id ${id} deleted`);\r\n              resolve();\r\n          });\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport async function checkAndAddDefaultPromptConfigurations() {\r\n  const promptConfigs = await getPromptConfigurations();\r\n  logInfo(\"checkAndAddDefaultPromptConfigurations # Prompt configurations\",promptConfigs);\r\n\r\n  if (!promptConfigs || promptConfigs.length === 0) {\r\n     let config_write_email =  {\r\n              name: \"Write Email\",\r\n              id: \"write-email\",\r\n              prompt_template: `\r\n                  You are a professional email creator. Based on the provided input information, your task is to craft a professional email. \r\n\r\n                  There are two types of input information:\r\n                  1. **User Context**: Details about the user on whose behalf the email is being written.\r\n                  2. **Site Context**: Additional context about the purpose or subject of the email.\r\n\r\n                  Your response should include:\r\n                  - **Subject**: A concise and relevant subject line.\r\n                  - **Body**: A professionally written email body.\r\n\r\n                  **Response format**:\r\n                  - Subject: [Your Subject Line]\r\n                  - Body: [Your Email Content]\r\n\r\n                  Ensure the response contains only the subject and body, with no additional commentary or explanations.\r\n\r\n                  User Context: \\${userContext}\r\n                  Site Context: \\${siteContext}\r\n              `,\r\n              canDelete: false\r\n          }\r\n         let config_generate_replies = {\r\n              name: \"Generate Replies\",\r\n              id: \"generate-replies\",\r\n              prompt_template: `\r\n                  You are tasked with writing a reply based on the provided context information. The context is divided into two types:\r\n\r\n                  1. **User Context**: An array of strings that provides insights into the type of reply required. It includes the user message and offers guidance on what the reply should convey. Note that the reply will be made on behalf of the same user.\r\n                  2. **Site Context**: An array of strings that provides comprehensive details about the topic.\r\n\r\n                  Your task is create a reply which contains the user context information more elaborated way by including the site context information.\r\n\r\n                  **Response Requirements**:\r\n                  - Provide only the reply content in your response.\r\n                  - Avoid including any additional commentary or explanations.\r\n\r\n                  **Inputs**:\r\n                  - User Context: \\${userContext}\r\n                  - Site Context: \\${siteContext}\r\n              `,\r\n              canDelete: false\r\n          }\r\n          await chrome.storage.sync.remove(\"promptconfig\");\r\n          await savePromptConfiguration(config_write_email);\r\n          await savePromptConfiguration(config_generate_replies);\r\n          logInfo(\"Default prompt configurations added.\");\r\n    \r\n  }\r\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n"],"names":[],"version":3,"file":"options.js.map"}